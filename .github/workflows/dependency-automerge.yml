name: Auto-Merge Dependency PRs

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled

permissions:
  pull-requests: write
  contents: write
  actions: read

jobs:
  process-prs:
    runs-on: ubuntu-latest
    steps:
      # Fetch all PRs sorted from oldest to newest
      - name: Get oldest PRs
        id: get-prs
        run: |
          prs=$(gh pr list --state open --json number,createdAt --jq 'sort_by(.createdAt) | .[].number')
          echo "prs=$prs" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Process PRs one by one
        run: |
          for pr in $prs; do
            echo "Processing PR #$pr"

            # Checkout PR branch
            gh pr checkout $pr

            # Handle conflicts: Ensure latest package.json dependency version is used
            git checkout --ours package.json
            git add package.json

            # Ensure package.json has no conflicts, then regenerate package-lock.json
            if git diff --name-only | grep "package.json"; then
              echo "package.json has conflicts, resolving..."
              npm install  # Regenerate package-lock.json
              git add package-lock.json
            fi

            # Commit and push the resolved changes
            git commit -m "Resolve dependency conflicts in PR #$pr" || echo "No changes to commit"
            git push origin HEAD

            # Wait for CI checks to pass
            gh pr review $pr --approve
            gh pr merge $pr --squash --auto

            echo "Merged PR #$pr successfully!"

          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
